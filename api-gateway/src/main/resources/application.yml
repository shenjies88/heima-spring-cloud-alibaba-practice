server:
  port: 7000
spring:
  application:
    name: api-gateway
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://192.168.56.10:9411/
    discoveryclientEnabled: false
  cloud:
    sentinel:
      eager: true
      filter:
        enabled: false
      transport:
        port: 17000
        dashboard: 192.168.56.10:8080
      datasource:
        gateway-flow-ds:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            dataId: ${spring.application.name}-flow-rule
            groupId: DEFAULT_GROUP
            rule-type: gw-flow
            data-type: json
    nacos:
      discovery:
        server-addr: 192.168.56.10:8848
    gateway:
      discovery:
        locator:
          enabled: true # 让gateway可以发现nacos中的微服务
      routes: # 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]
        - id: product_route # 当前路由的标识, 要求唯一
          uri: lb://service-product # 请求要转发到的地址
          order: 1 # 路由的优先级,数字越小级别越高
          predicates: # 断言(就是路由转发要满足的条件)
            - Path=/service-product/** # 当请求路径满足Path指定的规则时,才进行路由转发
          filters: # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1 # 转发之前去掉1层路径
        - id: order_route
          uri: lb://service-order
          order: 1
          predicates:
            - Path=/service-order/**
          filters:
            - StripPrefix=1